name: sanic-beskar testing

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: |
          python -m pip install --no-warn-conflicts --upgrade pip

        #----------------------------------------------
        #       load cached venv if cache exists
        #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

        #----------------------------------------------
        # install your root project, if required
        #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

        #----------------------------------------------
        #              run test suite
        #----------------------------------------------
      - name: test
        run: |
          poetry run pytest -x --cov=sanic_beskar --cov-report=xml
      - name: lint-src
        run: |
          poetry run flake8 sanic_beskar --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          flags: pytest # optional
          name: sanic_beskar # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
          env_vars: OS,PYTHON
          file: ./coverage.xml
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage.xml

        #----------------------------------------------
        #              run security test suite
        #----------------------------------------------
      - name: bandit security testing
        run: |
          poetry run bandit -r sanic_beskar/
      - name: safety security testing
        run: |
          poetry run safety check
      - name: Generate requirements.txt for Pysa
        run: |
          poetry export -o requirements.txt
      - name: Run Pysa Action
        uses: facebook/pysa-action@0.0.1
        with:
          repo-directory: './'
          requirements-path: 'requirements.txt'
          infer-types: true
          include-default-sapp-filters: true
          #sapp-filters-directory: path/to/custom-filters
