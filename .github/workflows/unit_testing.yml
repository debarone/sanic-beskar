name: Unit Testing

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true

        #----------------------------------------------
        #       load cached venv if cache exists
        #----------------------------------------------
      - name: Load cached dotvenv
        id: cached-poetry-dotvenv
        uses: actions/cache@v3
        with:
          path: .venv
          #key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/main.yml') }}

      - name: Load cached dotlocal
        id: cached-poetry-dotlocal
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/main.yml') }}

        #----------------------------------------------
        # install your root project, if required
        #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction --sync

        #----------------------------------------------
        #              run test suite
        #----------------------------------------------
      - name: test
        run: |
          poetry run pytest -x --cov=sanic_beskar --cov-report=xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          flags: pytest # optional
          name: sanic_beskar # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
          env_vars: OS,PYTHON
          file: ./coverage.xml
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage.xml
